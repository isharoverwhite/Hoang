!(function (e) {
  var t = {};
  function n(o) {
    if (t[o]) return t[o].exports;
    var r = (t[o] = { exports: {}, id: o, loaded: !1 });
    return e[o].call(r.exports, r, r.exports, n), (r.loaded = !0), r.exports;
  }
  (n.m = e), (n.c = t), (n.p = ""), n(0);
})({
  0: function (e, t, n) {
    "use strict";
    var o = (function () {
      function e(e, t) {
        for (var n = 0; n < t.length; n++) {
          var o = t[n];
          (o.enumerable = o.enumerable || !1),
            (o.configurable = !0),
            "value" in o && (o.writable = !0),
            Object.defineProperty(e, o.key, o);
        }
      }
      return function (t, n, o) {
        return n && e(t.prototype, n), o && e(t, o), t;
      };
    })();
    new ((function () {
      function e() {
        !(function (e, t) {
          if (!(e instanceof t))
            throw new TypeError("Cannot call a class as a function");
        })(this, e);
      }
      return (
        o(e, [
          {
            key: "run",
            value: function () {
              $(document).ready(function () {
                var e = $("#projects-filters"),
                  t = $("#projects-filter-toggle"),
                  o = $("#close-projects-filter"),
                  r = n(12);
                t.click(function (t) {
                  var n = $(t.currentTarget);
                  n.toggleClass("active"),
                    n.hasClass("active")
                      ? e.addClass("visible")
                      : e.removeClass("visible");
                }),
                  e.find(".js-filter-trigger").click(function (e) {
                    var t = $(e.currentTarget);
                    if (t.hasClass("active"))
                      e.preventDefault(), (window.location = t.data("reset"));
                    else {
                      var n = t[0].innerText.toLowerCase();
                      r.onSelectFilter(n), (window.location = t.data("href"));
                    }
                  }),
                  o.click(function () {
                    t.removeClass("active"), e.removeClass("visible");
                  });
              });
            },
          },
        ]),
        e
      );
    })())().run();
  },
  12: function (e, t) {
    "use strict";
    e.exports = {
      onChangeCountry: function (e) {
        dataLayer.push({ event: "country-selection", country: e });
      },
      onChangeColor: function (e) {
        dataLayer.push({ event: "color-selection", color: e });
      },
      onChangeSize: function (e) {
        dataLayer.push({ event: "size-selection", size: e });
      },
      onAddWishlist: function (e) {
        dataLayer.push({ event: "wishlist-add", id: e });
      },
      onARemoveWishlist: function (e) {
        dataLayer.push({ event: "wishlist-remove", id: e });
      },
      onAddToCart: function (e, t) {
        dataLayer.push({
          event: "addToCart",
          ecommerce: {
            currencyCode: e || t.currency,
            add: {
              products: [
                {
                  id: t.variationgroupid,
                  name: t.name,
                  price: t.price,
                  brand: t.brand,
                  category: t.category,
                  variant: t.variant,
                  dimension1: t.dimension1,
                  quantity: "1",
                },
              ],
            },
          },
        });
      },
      onRemoveFromCart: function (e) {
        dataLayer.push({
          event: "removeFromCart",
          ecommerce: {
            remove: {
              products: [
                {
                  id: e.variationgroupid,
                  name: e.name,
                  price: e.price,
                  brand: e.brand,
                  category: e.category,
                  variant: e.variant,
                  dimension1: e.dimension1,
                  quantity: e.quantity,
                },
              ],
            },
          },
        });
      },
      onWishlistRegistration: function (e, t) {
        dataLayer.push({ event: e, interest: t });
      },
      onSelectFilter: function (e) {
        dataLayer.push({ event: e });
      },
      onSelectPanelProductDetail: function (e) {
        dataLayer.push({ event: e });
      },
      onSelectAsstistance: function (e) {
        dataLayer.push({ event: e });
      },
      onReturnProceed: function (e, t) {
        dataLayer.push({
          ecommerce: { refund: { actionField: { id: e }, products: t } },
        });
      },
      onSelectSizeChart: function (e) {
        dataLayer.push({ event: e });
      },
      onProductClick: function (e) {
        dataLayer.push({
          event: "productClick",
          ecommerce: {
            click: {
              actionField: { list: e.list },
              products: [
                {
                  name: e.name,
                  id: e.pid,
                  price: e.price,
                  brand: e.brand,
                  category: e.category,
                  variant: e.currentcolorselected,
                  position: e.position,
                },
              ],
            },
          },
        });
      },
      onProductView: function (e) {
        dataLayer.push({
          event: "eec.productDetail",
          ecommerce: {
            currencyCode: e.currency,
            detail: {
              actionField: { list: e.categoryid },
              products: [
                {
                  name: e.name,
                  id: e.pid,
                  price: e.price,
                  brand: e.brand,
                  category: e.category,
                  variant: e.currentcolorselected ? e.currentcolorselected : "",
                },
              ],
            },
          },
        });
      },
      onProductsImpression: function (e, t) {
        void 0 != t
          ? dataLayer.push({
              event: "eec.categoryListing",
              ecommerce: { currencyCode: t, impressions: e },
            })
          : dataLayer.push({ ecommerce: { impressions: e } });
      },
      onCheckoutBegin: function (e) {
        dataLayer.push({
          event: "step4_checkout",
          ecommerce: {
            checkout: { actionField: { step: 4, option: "" }, products: e },
          },
        });
      },
      onChangePaymentMethod: function (e) {
        dataLayer.push({
          event: "checkoutOption",
          ecommerce: {
            checkout_option: { actionField: { step: 4, option: e } },
          },
        });
      },
      onOrderPurchase: function (e, t, n) {
        dataLayer.push({
          event: "eec.purchase",
          ecommerce: {
            currencyCode: n,
            purchase: {
              actionField: {
                id: t.id,
                affiliation: "Online Store",
                revenue: t.totalnetprice,
                tax: t.taxnetprice,
                shipping: t.adjustedshippingtotalnetprice,
                coupon: "",
              },
              products: e,
            },
          },
        });
      },
      onOrderConfirmation: function (e) {
        dataLayer.push({
          event: "step5_confirmation",
          ecommerce: {
            checkout: { actionField: { step: 5, option: "" }, products: e },
          },
        });
      },
      addToCartAsAStep: function (e, t, n, o, r, a) {
        dataLayer.push({
          event: "step1_addToCart",
          ecommerce: {
            checkout: {
              actionField: { step: 1 },
              products: [
                { name: e, id: t, price: n, brand: o, category: r, variant: a },
              ],
            },
          },
        });
      },
      step2Cart: function () {
        dataLayer.push({
          event: "step2_cart",
          ecommerce: { checkout: { actionField: { step: 2 } } },
        });
      },
      checkoutIdentification: function (e) {
        dataLayer.push({
          event: "step3_identification",
          ecommerce: { checkout: { actionField: { step: 3, option: e } } },
        });
      },
      checkoutFormErrorEvent: function (e) {
        dataLayer.push({ event: "checkoutformErrorEvent", eventLabel: e });
      },
    };
  },
});
